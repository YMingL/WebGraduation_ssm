<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.webgraduation.dao.CategoryGoodsMapper">
  <resultMap id="BaseResultMap" type="com.yang.webgraduation.entity.CategoryGoods">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="goodsId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="categoryId" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goodsId, categoryId
  </sql>

  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from categorygoods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from categorygoods
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.yang.webgraduation.entity.CategoryGoods">
    insert into categorygoods (id, goodsId, categoryId
      )
    values (#{id,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, #{categoryid,jdbcType=INTEGER}
      )
  </insert>






  <!--<insert id="insertSelective" parameterType="com.yang.webgraduation.entity.CategoryGoods">

    insert into categorygoods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="categoryid != null">
        categoryId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map">
    update categorygoods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsid != null">
        goodsId = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.categoryid != null">
        categoryId = #{record.categoryid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update categorygoods
    set id = #{record.id,jdbcType=INTEGER},
      goodsId = #{record.goodsid,jdbcType=INTEGER},
      categoryId = #{record.categoryid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yang.webgraduation.entity.CategoryGoods">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    update categorygoods
    <set>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null">
        categoryId = #{categoryid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yang.webgraduation.entity.CategoryGoods">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    update categorygoods
    set goodsId = #{goodsid,jdbcType=INTEGER},
      categoryId = #{categoryid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>-->
</mapper>