<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.webgraduation.dao.GoodsMapper">
  <resultMap id="GoodsResultMap" type="com.yang.webgraduation.entity.Goods">

      <id column="goodsId" property="goodsid"/>
      <result column="goodsUrl"  property="goodsurl" />
      <result column="goodsName" property="goodsname" />
      <result column="origPrice" property="origprice" />
      <result column="currPrice" property="currprice" />

    <association property="goodsDetail" javaType="com.yang.webgraduation.entity.GoodsDetail">
      <id column="goodsId" property="goodsid"/>
      <result column="sales" property="sales" />
      <result column="shopName" property="shopname" />
      <result column="province" property="province" />
      <result column="address" property="address" />
      <result column="goodsImageUrl" property="goodsImageUrl" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods.*,goodsdetail.sales,goodsdetail.shopname,goodsdetail.province,goodsdetail.address,goodsdetail.goodsImageUrl
  </sql>

  <select id="selectById" parameterType="java.lang.Integer" resultMap="GoodsResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    inner join goodsdetail on goods.goodsId = goodsdetail.goodsId
    where goods.goodsId = #{goodsid,jdbcType=INTEGER}
  </select>

  <select id="selectByGoodsName" parameterType="java.lang.String" resultMap="GoodsResultMap">
    select
    <include refid="Base_Column_List"/>
    from goods
    inner join goodsdetail on goods.goodsId = goodsdetail.goodsId
    where goods.goodsName = #{goodsName,jdbcType=VARCHAR}
  </select>

  <select id="selectOrderBySales" parameterType="java.lang.String" resultMap="GoodsResultMap">
    select
    <include refid="Base_Column_List"/>
    from goods
    inner join goodsdetail on goods.goodsId = goodsdetail.goodsId
    where goods.goodsName = #{goodsName,jdbcType=VARCHAR}
    order by goodsdetail.sales
  </select>


  <select id="selectListPage" parameterType="com.yang.webgraduation.dto.PageParam" resultMap="GoodsResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from goods
    inner join goodsdetail on goods.goodsId = goodsdetail.goodsId
    where goods.goodsName like concat("%",#{goodsName,jdbcType=VARCHAR},"%")
    order by goodsdetail.sales
    limit #{pageStart},#{pageSize}

  </select>

  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from goods
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.yang.webgraduation.entity.Goods">
    insert into goods (goodsId, goodsUrl, goodsName, 
      origPrice, currPrice)
    values (#{goodsid,jdbcType=INTEGER}, #{goodsurl,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR}, 
      #{origprice,jdbcType=VARCHAR}, #{currprice,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yang.webgraduation.entity.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsurl != null">
        goodsUrl,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="origprice != null">
        origPrice,
      </if>
      <if test="currprice != null">
        currPrice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsurl != null">
        #{goodsurl,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="origprice != null">
        #{origprice,jdbcType=VARCHAR},
      </if>
      <if test="currprice != null">
        #{currprice,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.yang.webgraduation.entity.Goods">
    update goods
    <set>
      <if test="goodsurl != null">
        goodsUrl = #{goodsurl,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="origprice != null">
        origPrice = #{origprice,jdbcType=VARCHAR},
      </if>
      <if test="currprice != null">
        currPrice = #{currprice,jdbcType=VARCHAR},
      </if>
    </set>
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="com.yang.webgraduation.entity.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods
    set goodsUrl = #{goodsurl,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      origPrice = #{origprice,jdbcType=VARCHAR},
      currPrice = #{currprice,jdbcType=VARCHAR}
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
</mapper>